
@using Microsoft.AspNetCore.Identity;
@model BugBurner.Models.Project
@inject IBTFileService _BTFileService;
@inject IBTProjectService _ProjectService;
@inject UserManager<BTUser> _UserManager;
@inject IBTNotificationService _notificationService;
@{
    ViewData["Title"] = "Details";
    BTUser? bTUser = await _UserManager.GetUserAsync(User);
}

<h1>Details</h1>

<div>
    <div class="container-fluid">
        @*OverView*@
        <div class="row gy-2">
            <div class="col-md-12 col">
                <div class="row col-cols-2 mt-5 bg-secondary">
                    <div class="card col m-1 p-2">
                        <div class="body">
                            @* Project Name *@
                            <h5>@Model.Name</h5>
                            @* Project Description *@
                            <p>@Model.Description</p>
                            <div class="progress-container progress-info m-b-25">
                                <span class="progress-badge" style="font-size:small">Project Status</span>
                                <div class="progress">
                                    @* Razor code block *@
                                    [Progress Bar code]
                                    @*<div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">*@
                                    @* Use Progress Bar code variable here *@
                                    <span class="progress-value">100%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card col m-1 p-2">
                    <div class="body">
                        <ul class=" list-unstyled basic-list">
                            <li>Start Date: <span class="">@Model.StartDate</span></li>
                            <li>Deadline: <span class="">@Model.EndDate</span></li>
                            <li>Priority: <span class="">@Model.ProjectPriority!.Name</span></li>
                            @* if() logic *@
                            [Project Active/Inactive]
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        @*Details*@
        <div class="col-md-4 col mt-5 ">
            <div class="bg-secondary">
                <div class="card m-1 p-2">
                    <div class="header">
                        <h2>Project Manager</h2>
                        <hr />
                    </div>
                    <div class="body" style="overflow-y:auto;height:300px;">
                        [Project Manager]
                        @((await _ProjectService.GetProjectManagerAsync(Model.Id))?.FullName)
                        <span><a class="btn btn-sm alert-primary" asp-action="AssignPM" asp-route-id="@Model.Id">Manage Project Manger</a></span>
                        @* if() logic for Avatar/Default etc *@

                    </div>
                </div>
            </div>
        </div>

        @*PM*@
        <div class="col-md-4 col mt-5 ">
            <div class="bg-secondary">
                <div class="card m-1 p-2">
                    <div class="header">
                        <span><h2>Project Team</h2></span>
                        <span><a class="btn btn-sm alert-primary" asp-action="AssignProjectMembers" asp-route-id="@Model.Id">Manage Team</a></span>
                        <hr />
                    </div>
                    <div class="body" style="overflow-y:auto;height:300px;">
                        <ul class="right_chat list-unstyled mb-0">
                            @foreach (BTUser member in Model.Members)
                            {
                                <li>
                                    <div>
                                        <span> @member.FullName</span>
                                        <span class="" style="font-size:x-small">[@(string.Join(",", await _UserManager.GetRolesAsync(member)))]</span>
                                    </div>
                                </li>
                                @* Logic for avatars *@
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        @*Project Team*@
        <div class="col-md-4 col mt-5 ">
            <div class="bg-dark">
                <div class="card m-1 p-2">
                    <div class="header">
                        <h2>Project Activity</h2>
                        <hr />
                    </div>
                    <div class="body" style="overflow-y:auto;height:300px;">
                        @* Project Activity loop *@
                        @foreach (TicketHistory history in Model.Tickets.SelectMany(t => t.History).OrderBy(h => h.Created))
                        {
                            <div class="">

                                <span class="date" style="font-weight:bold">@history.Created.ToString("dd MMM yyyy")</span>
                                <h6>@history.Description</h6>
                                <span>By: <a href="" title="@history.User!.FullName">@history.User.FirstName</a></span>
                                <div class="">
                                    @if (history.Description!.Contains("New Ticket Created"))
                                    {
                                        <p> A ticket Was Added</p>
                                    }
                                    else if (history.PropertyName!.Equals("TicketComment") || history.PropertyName.Equals("TicketAttachment"))
                                    {
                                        <p>A <b>@history.PropertyName</b> was added.</p>
                                    }
                                    else
                                    {
                                        <p>The ticket <b>@history.PropertyName</b> was edited</p>
                                        <p>@($"Previous {history.PropertyName}: ") <span style="color:red">@history.OldValue</span></p>
                                        <p>@($"Previous {history.PropertyName}: ") <span style="color:green">@history.NewValue</span></p>
                                    }
                                </div>
                            </div>
                            <hr />
                        }
                    </div>

                </div>
            </div>
        </div>  

        @*Project Tickets*@
        <div class="col-md-12 col">
            <div class="mt-5 bg-secondary">
                <div class="card m-1 p-2">
                    <div class="header">
                        <h2>Tickets</h2>
                    </div>
                    <div class="body">
                        <div class="table-responsive table-striped" style="overflow-y:auto;height:600px;">
                            <table class="table table-hover">
                                <thead class="text-center">
                                    <tr>
                                        <td>
                                            <p>Ticket</p>
                                        </td>
                                        <td>
                                            <p>Created Date</p>
                                        </td>
                                        <td>
                                            <p>Ticket Priority</p>
                                        </td>
                                    </tr>
                                </thead>
                                @foreach (Ticket ticket in Model.Tickets)
                                {
                                    <tbody>
                                        <tr>
                                            <td>@ticket.Title</td>
                                            <td>@ticket.Created</td>
                                            <td>@ticket.TicketPriority?.Name</td>
                                        </tr>
                                    </tbody>
                                }
                            </table>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>




